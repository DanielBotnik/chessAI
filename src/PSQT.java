package botnik.chess.server.chessai;

public class PSQT {

    public static final int[] PAWN_PSQT = {
            0, 0, 0, 0, 0, 0, 0, 0,
            me(50,50), me(50,50), me(50,50), me(50,50), me(50,50), me(50,50), me(50,50 ), me(50,50 ),
            me(50,50), me(50,50), me(50,50), me(50,50), me(50,50), me(50,50), me(50,50 ), me(50,50 ),
            me(50,50), me(50,50), me(50,50), me(50,50), me(50,50), me(50,50), me(50,50 ), me(50,50 ),
            me(50,50), me(50,50), me(50,50), me(50,50), me(50,50), me(50,50), me(50,50 ), me(50,50 ),
            me(50,50), me(50,50), me(50,50), me(50,50), me(50,50), me(50,50), me(50,50 ), me(50,50 ),
            me(50,50), me(50,50), me(50,50), me(50,50), me(50,50), me(50,50), me(50,50 ), me(50,50 ),
            0,0,0,0,0,0,0,0
    };

    private static final int[] KNIGHT_PSQT = {
            me(-57,-26),me(-42,-19),me(-33,-14),me(-31,-9),me(-31,-9),me(-33,-14),me(-42,-19),me(-50,-26),
            me(-30,-22),me(-16,-19),me(-9,-5),me(-4,3),me(-4,3),me(-9,-5),me(-16,-19),me(-30,-22),
            me(-27,-18),me(-3,-9),me(2,-3),me(4,14),me(4,14),me(2,-3),me(-3,-9),me(-27,-18),
            me(-13,-15),me(2,-1),me(15,5),me(21,13),me(21,13),me(15,5),me(2,-1),me(-13,-15),
            me(-12,-15),me(3,-7),me(17,3),me(23,17),me(23,17),me(17,3),me(3,-7),me(-12,-15),
            me(-4,-21),me(10,-14),me(29,-6),me(27,7),me(27,7),me(29,-6),me(10,-14),me(-4,-21),
            me(-32,-33),me(-15,-20),me(1,-21),me(16,6),me(16,6),me(1,-21),me(-15,-20),me(-32,-33),
            me(-68,-29),me(-40,-41),me(-28,-28),me(-19,-7),me(-19,-7),me(-28,-28),me(-40,-41),me(-68,-29)
    };

    private static final int[] BISHOP_PSQT = {
            me(-13, -14), me(-1, -8), me(-2, -9), me(-5, -3), me(-5,-3 ), me(-2, -9), me(-1,-8 ), me(-13,-14 ),
            me(-4, -9), me(2, -3), me(5,-4 ), me(1,0 ), me(1,0 ), me(5,-4 ), me(2,-3 ), me(-4,-9 ),
            me(-2,-3 ), me(5,0 ), me(-1,0 ), me(4,2 ), me(4,2 ), me(-1,0 ), me(5,0 ), me(-2,-3 ),
            me(-1,-4 ), me(3,-1 ), me(6,0 ), me(10,5 ), me(10,5 ), me(6,0 ), me(3,-1 ), me(-1,-4 ),
            me(-3, -5), me(7,-1 ), me(5,0 ), me(8,5 ), me(8,5 ), me(5,0 ), me(7,-1 ), me(-3,-5 ),
            me(-4,-7 ), me(1,2 ), me(0,1 ), me(3,2 ), me(3,2 ), me(0,1 ), me(1,2 ), me(-4,-7 ),
            me(-4,-8 ), me(-3,-6 ), me(1,0 ), me(0,1 ), me(0,1 ), me(1,0 ), me(-3,-6 ), me(-4,-8 ),
            me(-12,-11 ), me(0,-10 ), me(-3,-9 ), me(-3,-6 ), me(-3, -6), me(-3,-9 ), me(0,-10 ), me(-12,-11)
    };

    public static final int[] ROOK_PSQT = {
            me(-10,-3 ), me(-7,-4 ), me(-5,-3 ), me(-2,-3 ), me(-2, -3), me(-5,-3 ), me(-7,-4 ), me(-10,-3),
            me(-7, -4), me(-4,-3 ), me(-2,0 ), me(2, -1), me(2,-1 ), me(-2,0 ), me(-4,-3 ), me(-7,-4 ),
            me(-8, 2), me(-4, -3), me(0, -1), me(1, -2), me(1,-2 ), me(0, -1), me(-4, -3), me(-8,2 ),
            me(-4, -2), me(-2,1 ), me(-1,-3 ), me(-2,2 ), me(-2,2 ), me(-1,-3 ), me(-2,1 ), me(-4,-2 ),
            me(-9,-2 ), me(-5,3 ), me(-1,2 ), me(1,-2 ), me(1,-2 ), me(-1,2 ), me(-5,3 ), me(-9,-2 ),
            me(-7, 2), me(-1,1 ), me(2,-2 ), me(4,4 ), me(4,4 ), me(2,-2 ), me(-1,1 ), me(-7,2 ),
            me(-1,1 ), me(5, 2), me(6,7 ), me(7,-2 ), me(7,-2 ), me(6,7 ), me(5,2 ), me(-1,1 ),
            me(-6, 8), me(-7, 0), me(0,9 ), me(3,6 ), me(3, 6), me(0, 9), me(-7, 0), me(-6, 8)
    };

    public static final int[] QUEEN_PSQT = {
            me(1,-29),me(-2,-26),me(-2,-21),me(2,-7),me(2,-7),me(-2,-21),me(-2,-26),me(1,-29),
            me(-1,-18),me(2,-11),me(3,-8),me(4,-1),me(4,-1),me(3,-8),me(2,-11),me(-1,-18),
            me(-1,-13),me(2,-6),me(4,-3),me(3,1),me(3,1),me(4,-3),me(2,-6),me(-1,-13),
            me(1,-7),me(2,-1),me(3,5),me(3,9),me(3,9),me(3,5),me(2,-1),me(1,-7),
            me(0,-10),me(5,-2),me(4,3),me(2,7),me(2,7),me(4,3),me(5,-2),me(0,-10),
            me(-1,-13),me(3,-6),me(2,-3),me(3,1),me(3,1),me(2,-3),me(3,-6),me(-1,-13),
            me(-2,-18),me(2,-9),me(3,-8),me(2,-2),me(2,-2),me(3,-8),me(2,-9),me(-2,-18),
            me(-1,-31),me(-1,-19),me(1,-14),me(-1,-9),me(-1,-9),me(1,-14),me(-1,-19),me(-1,-31),
    };

    public static final int[] KING_PSQT = {
            me(91, 1), me(110,15 ), me(91,37 ), me(72,24 ), me(72,24 ), me(91,37 ), me(110,15 ), me(91,1),
            me(81,17 ), me(100,33 ), me(74,41 ), me(66,42 ), me(66,42 ), me(74,41 ), me(100,33 ), me(81,17),
            me(68,29 ), me(86,40 ), me(59,57 ), me(42,63 ), me(42,63 ), me(59,57 ), me(86,40 ), me(68,29 ),
            me(53,33 ), me(64,52 ), me(46,61 ), me(38, 60), me(38,60 ), me(46,61 ), me(64,52 ), me(53,33 ),
            me(52,32 ), me(61,57 ), me(33,73 ), me(24,73 ), me(24,73 ), me(33,73 ), me(61,57 ), me(52,32 ),
            me(41, 31), me(47,59 ), me(29,61 ), me(10,63 ), me(10,63 ), me(29,61 ), me(47,59 ), me(41,31 ),
            me(32, 17), me(45,40 ), me(23,39 ), me(11,43 ), me(11,43 ), me(23,39 ), me(45,40 ), me(32,17 ),
            me(18, 4), me(29,20 ), me(14,23 ), me(0,24 ), me(0,24 ), me(14,23 ), me(29,20 ), me(18,4 )
    };

    public static final int[][] PSQT = {
            PAWN_PSQT,
            KNIGHT_PSQT,
            BISHOP_PSQT,
            ROOK_PSQT,
            QUEEN_PSQT,
            KING_PSQT
    };

    private static int me(int mg,int eg) {
        return (mg << 16) + eg;
    }
}
